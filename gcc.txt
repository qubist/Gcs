#define LINE_SIZE 1000
#define NULL 0
#include <stdio.h>
#define PARAM_SIZE 5
#define PARAMNUM 4
  FILE *fp;

main(){
  char c,buffer[LINE_SIZE],command[15],params[PARAMNUM][PARAM_SIZE],b[255];
  int f=0, done=0, p, squid, octopus;

  //macro vars
  char macroname[40];
  int macroon=0;

  fp=fopen("/dev/ttyACM0", "w");
  if(fp==0){
    fp=fopen("/dev/ttyACM1", "w");
  }

  if (fp==0) {
    printf("unable to connect to printer! running in unconnected mode\n");
    //    return(1);
    }

  //the loop
  while(done==0){
    if(macroon==1){
      printf("%s>", macroname);}
    else putchar('>');
    //get a line from terminal as a str
    f=0;
    while((c = getchar()) !='\n') {
      buffer[f] = c;
      f++;
    }
    buffer[f]=NULL;
    //parse command from buffer
    f=0;
    while(buffer[f]!=' ' && buffer[f]!=NULL) {
      command[f]=buffer[f];
      f++;}
    command[f]=NULL;
    //parse params from buffer
    squid=0;
    for(octopus=0; octopus<PARAMNUM; params[octopus++][0]=0);
    while(buffer[f]!=NULL){
      p=0;
      f++;
      while(buffer[f]!=' ' && buffer[f]!=NULL) {
	params[squid][p]=buffer[f];
	f++; p++;}
      params[squid][p]=NULL;
      squid++;
    }
    //record macro command
    if (streq(command, "record")) {
      macroon=1;
      macroname=params[0];
    }
    //home command
    if (streq(command,"home")) {
      sendg("G28");
    }
    //laser on command
    else if (streq(command,"laseron")) {
      sendg("M42 S255 P12");
    }
    //laser off command
    else if (streq(command,"laseroff")) {
      sendg("M42 S0 P12");
    }
    //moveto command
    else if (streq(command, "moveto")) {
      xyzcode(params[0], params[1], params[2], "G90\nG1");
    }
    //move command
    else if (streq(command, "move")) {
      xyzcode(params[0], params[1], params[2], "G91\nG1");
    }
    //set speed command
    else if (streq(command,"speed")) {
      sprintf(b, "G1 F%s", params[0]);
      sendg(b);
    }

    //GCODE command
    else if (buffer[0]=='G') {
      sendg(buffer);
    }

    //quit command
    else if (streq(command, "quit")) {
      done=1;
      if (fp !=0) fclose(fp);
    }
    //command not found
    else printf("command not found\n");

    //    printf("%s\n",buffer);

    f=0;
  }
}

int streq(s1,s2)
     char s1[],s2[];
{
  int f=0;
  int e;
  while((e = (s1[f]==s2[f])) && (s1[f]!=NULL && s2[f]!=NULL)) 
    f++;
  return e;
}

void sendg(gcode)
     char gcode[];
{
  if(gcode[0]!=0) {
    if (fp != 0)  fprintf(fp, "%s\n", gcode);
    printf("%s\n", gcode);
  }
}

void xyzcode(x, y, z, g)
     char x[], y[], z[], g[];
{
  char b[255];
  if(isnumnull(x) && isnumnull(y) && isnumnull(z)){ 
    b[0]=0;
     //if params 1, 2, and 3 are there, input all of them
     if(x[0]!=0 && y[0]!=0 && z[0]!=0)
       sprintf(b,"%s X%s Y%s Z%s", g, x, y, z);
     //if params 1 and 2 are actual things and not param 3, don't send Z
     else if(x[0]!=0 && y[0]!=0)
       sprintf(b,"%s X%s Y%s", g, x, y);
     //if params 1 or 2 aren't there, return an error and print the "wrong" GCODE
     else printf("this command requires at least two parameters\n");
     sendg(b);
  }
  else printf("invalid parameter(s)\n");
}

int isnumnull(t)
     char t[];
{
  int f=0;
  while(t[f]!=0) {
    if(!(t[f]>='0' && t[f]<='9')) return 0;
    f++;
  }
  return 1;
}
